/*
 * SOC common registers and helper function/macro definitions
 *
 * Copyright (C) 2016 Piotr Dymacz <piotr@dymacz.pl>
 *
 * SPDX-License-Identifier: GPL-2.0
 */

#ifndef _AR933X_HS_UART_H_
#define _AR933X_HS_UART_H_

/*
 * High-Speed UART registers
 */
#define QCA_HSUART_DATA_REG	QCA_HSUART_BASE_REG + 0x00
#define QCA_HSUART_CS_REG	QCA_HSUART_BASE_REG + 0x04
#define QCA_HSUART_CLK_REG	QCA_HSUART_BASE_REG + 0x08
#define QCA_HSUART_INT_REG	QCA_HSUART_BASE_REG + 0x0C
#define QCA_HSUART_INT_EN_REG	QCA_HSUART_BASE_REG + 0x10

/*
 * High-Speed UART registers BIT fields
 */

/* UART_DATA register (UART transmit and RX FIFO interface ) */
#define QCA_HSUART_DATA_TX_RX_DATA_SHIFT	0
#define QCA_HSUART_DATA_TX_RX_DATA_MASK		BITS(QCA_HSUART_DATA_TX_RX_DATA_SHIFT, 8)
#define QCA_HSUART_DATA_RX_CSR_SHIFT		8
#define QCA_HSUART_DATA_RX_CSR_MASK		BIT(QCA_HSUART_DATA_RX_CSR_SHIFT)
#define QCA_HSUART_DATA_TX_CSR_SHIFT		9
#define QCA_HSUART_DATA_TX_CSR_MASK		BIT(QCA_HSUART_DATA_TX_CSR_SHIFT)

/* UART_CS register (UART configuration and status) */
#define QCA_HSUART_CS_PAR_MODE_SHIFT		0
#define QCA_HSUART_CS_PAR_MODE_MASK		BITS(QCA_HSUART_CS_PAR_MODE_SHIFT, 2)
#define QCA_HSUART_CS_PAR_MODE_NO_VAL		0x0
#define QCA_HSUART_CS_PAR_MODE_ODD_VAL		0x2
#define QCA_HSUART_CS_PAR_MODE_OVEN_VAL		0x3
#define QCA_HSUART_CS_IFACE_MODE_SHIFT		2
#define QCA_HSUART_CS_IFACE_MODE_MASK		BITS(QCA_HSUART_CS_IFACE_MODE_SHIFT, 2)
#define QCA_HSUART_CS_IFACE_MODE_DISABLE_VAL	0x0
#define QCA_HSUART_CS_IFACE_MODE_DTE_VAL	0x1
#define QCA_HSUART_CS_IFACE_MODE_DCE_VAL	0x2
#define QCA_HSUART_CS_FLOW_MODE_SHIFT		4
#define QCA_HSUART_CS_FLOW_MODE_MASK		BITS(QCA_HSUART_CS_FLOW_MODE_SHIFT, 2)
#define QCA_HSUART_CS_FLOW_MODE_NO_VAL		0x0
#define QCA_HSUART_CS_FLOW_MODE_HW_VAL		0x2
#define QCA_HSUART_CS_FLOW_MODE_INV_VAL		0x3
#define QCA_HSUART_CS_DMA_EN_SHIFT		6
#define QCA_HSUART_CS_DMA_EN_MASK		BIT(QCA_HSUART_CS_DMA_EN_SHIFT)
#define QCA_HSUART_CS_RX_READY_ORIDE_SHIFT	7
#define QCA_HSUART_CS_RX_READY_ORIDE_MASK	BIT(QCA_HSUART_CS_RX_READY_ORIDE_SHIFT)
#define QCA_HSUART_CS_TX_READY_ORIDE_SHIFT	8
#define QCA_HSUART_CS_TX_READY_ORIDE_MASK	BIT(QCA_HSUART_CS_TX_READY_ORIDE_SHIFT)
#define QCA_HSUART_CS_TX_READY_SHIFT		9
#define QCA_HSUART_CS_TX_READY_MASK		BIT(QCA_HSUART_CS_TX_READY_SHIFT)
#define QCA_HSUART_CS_RX_BREAK_SHIFT		10
#define QCA_HSUART_CS_RX_BREAK_MASK		BIT(QCA_HSUART_CS_RX_BREAK_SHIFT)
#define QCA_HSUART_CS_TX_BREAK_SHIFT		11
#define QCA_HSUART_CS_TX_BREAK_MASK		BIT(QCA_HSUART_CS_TX_BREAK_SHIFT)
#define QCA_HSUART_CS_HOST_INT_SHIFT		12
#define QCA_HSUART_CS_HOST_INT_MASK		BIT(QCA_HSUART_CS_HOST_INT_SHIFT)
#define QCA_HSUART_CS_HOST_INT_EN_SHIFT		13
#define QCA_HSUART_CS_HOST_INT_EN_MASK		BIT(QCA_HSUART_CS_HOST_INT_EN_SHIFT)
#define QCA_HSUART_CS_TX_BUSY_SHIFT		14
#define QCA_HSUART_CS_TX_BUSY_MASK		BIT(QCA_HSUART_CS_TX_BUSY_SHIFT)
#define QCA_HSUART_CS_RX_BUSY_SHIFT		15
#define QCA_HSUART_CS_RX_BUSY_MASK		BIT(QCA_HSUART_CS_RX_BUSY_SHIFT)

/* UART_CLOCK register (UART clock) */
#define QCA_HSUART_CLK_STEP_SHIFT	0
#define QCA_HSUART_CLK_STEP_MASK	BITS(QCA_HSUART_CLK_STEP_SHIFT, 16)
#define QCA_HSUART_CLK_STEP_MAX_VAL	0x3333
#define QCA_HSUART_CLK_SCALE_SHIFT	16
#define QCA_HSUART_CLK_SCALE_MASK	BITS(QCA_HSUART_CLK_SCALE_SHIFT, 8)
#define QCA_HSUART_CLK_SCALE_MAX_VAL	0xFF

/* UART_INT register (UART interrupt/control status) */
#define QCA_HSUART_INT_RX_VALID_SHIFT		0
#define QCA_HSUART_INT_RX_VALID_MASK		BIT(QCA_HSUART_INT_RX_VALID_SHIFT)
#define QCA_HSUART_INT_TX_READY_SHIFT		1
#define QCA_HSUART_INT_TX_READY_MASK		BIT(QCA_HSUART_INT_TX_READY_SHIFT)
#define QCA_HSUART_INT_RX_FRAMING_ERR_SHIFT	2
#define QCA_HSUART_INT_RX_FRAMING_ERR_MASK	BIT(QCA_HSUART_INT_RX_FRAMING_ERR_SHIFT)
#define QCA_HSUART_INT_RX_OVERFLOW_ERR_SHIFT	3
#define QCA_HSUART_INT_RX_OVERFLOW_ERR_MASK	BIT(QCA_HSUART_INT_RX_OVERFLOW_ERR_SHIFT)
#define QCA_HSUART_INT_TX_OVERFLOW_ERR_SHIFT	4
#define QCA_HSUART_INT_TX_OVERFLOW_ERR_MASK	BIT(QCA_HSUART_INT_TX_OVERFLOW_ERR_SHIFT)
#define QCA_HSUART_INT_RX_PARITY_ERR_SHIFT	5
#define QCA_HSUART_INT_RX_PARITY_ERR_MASK	BIT(QCA_HSUART_INT_RX_PARITY_ERR_SHIFT)
#define QCA_HSUART_INT_RX_BREAK_ON_SHIFT	6
#define QCA_HSUART_INT_RX_BREAK_ON_MASK		BIT(QCA_HSUART_INT_RX_BREAK_ON_SHIFT)
#define QCA_HSUART_INT_RX_BREAK_OFF_SHIFT	7
#define QCA_HSUART_INT_RX_BREAK_OFF_MASK	BIT(QCA_HSUART_INT_RX_BREAK_OFF_SHIFT)
#define QCA_HSUART_INT_RX_FULL_SHIFT		8
#define QCA_HSUART_INT_RX_FULL_MASK		BIT(QCA_HSUART_INT_RX_FULL_SHIFT)
#define QCA_HSUART_INT_TX_EMPTY_SHIFT		9
#define QCA_HSUART_INT_TX_EMPTY_MASK		BIT(QCA_HSUART_INT_TX_EMPTY_SHIFT)

/* UART_INT_EN register (UART interrupt enable) */
#define QCA_HSUART_INT_EN_RX_VALID_SHIFT	0
#define QCA_HSUART_INT_EN_RX_VALID_MASK		BIT(QCA_HSUART_INT_EN_RX_VALID_SHIFT)
#define QCA_HSUART_INT_EN_TX_READY_SHIFT	1
#define QCA_HSUART_INT_EN_TX_READY_MASK		BIT(QCA_HSUART_INT_EN_TX_READY_SHIFT)
#define QCA_HSUART_INT_EN_RX_FRAMING_ERR_SHIFT	2
#define QCA_HSUART_INT_EN_RX_FRAMING_ERR_MASK	BIT(QCA_HSUART_INT_EN_RX_FRAMING_ERR_SHIFT)
#define QCA_HSUART_INT_EN_RX_OVERFLOW_ERR_SHIFT	3
#define QCA_HSUART_INT_EN_RX_OVERFLOW_ERR_MASK	BIT(QCA_HSUART_INT_EN_RX_OVERFLOW_ERR_SHIFT)
#define QCA_HSUART_INT_EN_TX_OVERFLOW_ERR_SHIFT	4
#define QCA_HSUART_INT_EN_TX_OVERFLOW_ERR_MASK	BIT(QCA_HSUART_INT_EN_TX_OVERFLOW_ERR_SHIFT)
#define QCA_HSUART_INT_EN_RX_PARITY_ERR_SHIFT	5
#define QCA_HSUART_INT_EN_RX_PARITY_ERR_MASK	BIT(QCA_HSUART_INT_EN_RX_PARITY_ERR_SHIFT)
#define QCA_HSUART_INT_EN_RX_BREAK_ON_SHIFT	6
#define QCA_HSUART_INT_EN_RX_BREAK_ON_MASK	BIT(QCA_HSUART_INT_EN_RX_BREAK_ON_SHIFT)
#define QCA_HSUART_INT_EN_RX_BREAK_OFF_SHIFT	7
#define QCA_HSUART_INT_EN_RX_BREAK_OFF_MASK	BIT(QCA_HSUART_INT_EN_RX_BREAK_OFF_SHIFT)
#define QCA_HSUART_INT_EN_RX_FULL_SHIFT		8
#define QCA_HSUART_INT_EN_RX_FULL_MASK		BIT(QCA_HSUART_INT_EN_RX_FULL_SHIFT)
#define QCA_HSUART_INT_EN_TX_EMPTY_SHIFT	9
#define QCA_HSUART_INT_EN_TX_EMPTY_MASK		BIT(QCA_HSUART_INT_EN_TX_EMPTY_SHIFT)

void ar933x_hsuart_init(void);
void ar933x_hsuart_putc(const char c);
void ar933x_hsuart_puts(const char *s);
int ar933x_hsuart_tstc(void);
int ar933x_hsuart_getc(void);

#endif /* _SOC_COMMON_H_ */
