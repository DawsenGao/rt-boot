/*
 * SOC common registers and helper function/macro definitions
 *
 * Copyright (C) 2016 Piotr Dymacz <piotr@dymacz.pl>
 *
 * SPDX-License-Identifier: GPL-2.0
 */

#ifndef _QCA953X_SPI_H_
#define _QCA953X_SPI_H_
/*
 * SPI serial flash registers
 */
#define QCA_SPI_FUNC_SEL_REG		QCA_FLASH_BASE_REG + 0x00
#define QCA_SPI_CTRL_REG		QCA_FLASH_BASE_REG + 0x04
#define QCA_SPI_IO_CTRL_REG		QCA_FLASH_BASE_REG + 0x08
#define QCA_SPI_READ_DATA_REG		QCA_FLASH_BASE_REG + 0x0C
#define QCA_SPI_SHIFT_DATAOUT_REG	QCA_FLASH_BASE_REG + 0x10
#define QCA_SPI_SHIFT_CNT_REG		QCA_FLASH_BASE_REG + 0x14
#define QCA_SPI_SHIFT_DATAIN_REG	QCA_FLASH_BASE_REG + 0x18

/*
 * SPI serial flash registers BIT fields
 */

/* SPI_FUNC_SELECT register (SPI function select) */
#define QCA_SPI_FUNC_SEL_FUNC_SEL_SHIFT	0
#define QCA_SPI_FUNC_SEL_FUNC_SEL_MASK	BIT(QCA_SPI_FUNC_SEL_FUNC_SEL_SHIFT)

/* SPI_CONTROL register (SPI control) */
#define QCA_SPI_CTRL_CLK_DIV_SHIFT	0
#define QCA_SPI_CTRL_CLK_DIV_MASK	BITS(QCA_SPI_CTRL_CLK_DIV_SHIFT, 6)
#define QCA_SPI_CTRL_REMAP_DIS_SHIFT	6
#define QCA_SPI_CTRL_REMAP_DIS_MASK	BIT(QCA_SPI_CTRL_REMAP_DIS_SHIFT)
#define QCA_SPI_CTRL_SPI_RELOCATE_SHIFT	7
#define QCA_SPI_CTRL_SPI_RELOCATE_MASK	BIT(QCA_SPI_CTRL_SPI_RELOCATE_SHIFT)
#define QCA_SPI_CTRL_TSHSL_CNT_SHIFT	8
#define QCA_SPI_CTRL_TSHSL_CNT_MASK	BITS(QCA_SPI_CTRL_TSHSL_CNT_SHIFT, 6)

/* SPI_IO_CONTROL register (SPI I/O control) */
#define QCA_SPI_IO_CTRL_IO_DO_SHIFT	0
#define QCA_SPI_IO_CTRL_IO_DO_MASK	BIT(QCA_SPI_IO_CTRL_IO_DO_SHIFT)
#define QCA_SPI_IO_CTRL_IO_CLK_SHIFT	8
#define QCA_SPI_IO_CTRL_IO_CLK_MASK	BIT(QCA_SPI_IO_CTRL_IO_CLK_SHIFT)
#define QCA_SPI_IO_CTRL_IO_CS0_SHIFT	16
#define QCA_SPI_IO_CTRL_IO_CS0_MASK	BIT(QCA_SPI_IO_CTRL_IO_CS0_SHIFT)
#define QCA_SPI_IO_CTRL_IO_CS1_SHIFT	17
#define QCA_SPI_IO_CTRL_IO_CS1_MASK	BIT(QCA_SPI_IO_CTRL_IO_CS1_SHIFT)
#define QCA_SPI_IO_CTRL_IO_CS2_SHIFT	18
#define QCA_SPI_IO_CTRL_IO_CS2_MASK	BIT(QCA_SPI_IO_CTRL_IO_CS2_SHIFT)

/* SPI_SHIFT_CNT_ADDR register (SPI content to shift out or in) */
#define QCA_SPI_SHIFT_CNT_BITS_CNT_SHIFT	0
#define QCA_SPI_SHIFT_CNT_BITS_CNT_MASK		BITS(QCA_SPI_SHIFT_CNT_BITS_CNT_SHIFT, 7)
#define QCA_SPI_SHIFT_CNT_TERMINATE_SHIFT	26
#define QCA_SPI_SHIFT_CNT_TERMINATE_MASK	BIT(QCA_SPI_SHIFT_CNT_TERMINATE_SHIFT)
#define QCA_SPI_SHIFT_CNT_CLKOUT_INIT_SHIFT	27
#define QCA_SPI_SHIFT_CNT_CLKOUT_INIT_MASK	BIT(QCA_SPI_SHIFT_CNT_CLKOUT_INIT_SHIFT)
#define QCA_SPI_SHIFT_CNT_CHNL_CS0_SHIFT	28
#define QCA_SPI_SHIFT_CNT_CHNL_CS0_MASK		BIT(QCA_SPI_SHIFT_CNT_CHNL_CS0_SHIFT)
#define QCA_SPI_SHIFT_CNT_CHNL_CS1_SHIFT	29
#define QCA_SPI_SHIFT_CNT_CHNL_CS1_MASK		BIT(QCA_SPI_SHIFT_CNT_CHNL_CS1_SHIFT)
#define QCA_SPI_SHIFT_CNT_CHNL_CS2_SHIFT	30
#define QCA_SPI_SHIFT_CNT_CHNL_CS2_MASK		BIT(QCA_SPI_SHIFT_CNT_CHNL_CS2_SHIFT)
#define QCA_SPI_SHIFT_CNT_SHIFT_EN_SHIFT	31
#define QCA_SPI_SHIFT_CNT_SHIFT_EN_MASK		BIT(QCA_SPI_SHIFT_CNT_SHIFT_EN_SHIFT)

void qca953x_spi_enable(void);
void qca953x_spi_disable(void);
void qca953x_shift_out(rt_uint32_t data_out, rt_uint32_t bits_cnt, rt_uint32_t terminate);
rt_uint32_t qca953x_shift_in(void);
void qca953x_change_cs(rt_uint32_t cs_bank);


#endif